/* tslint:disable */
/* eslint-disable */
/**
 * BackedUp API
 * Microservices-based backup and vault management platform with encrypted backups and distributed storage
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateClientStorageJson
 */
export interface CreateClientStorageJson {
    /**
     * 
     * @type {string}
     * @memberof CreateClientStorageJson
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof CreateClientStorageJson
     */
    provider: CreateClientStorageJsonProviderEnum;
    /**
     * Provider-specific configuration (S3 or FTP)
     * @type {object}
     * @memberof CreateClientStorageJson
     */
    config: object;
}


/**
 * @export
 */
export const CreateClientStorageJsonProviderEnum = {
    S3: 's3',
    Ftp: 'ftp'
} as const;
export type CreateClientStorageJsonProviderEnum = typeof CreateClientStorageJsonProviderEnum[keyof typeof CreateClientStorageJsonProviderEnum];


/**
 * Check if a given object implements the CreateClientStorageJson interface.
 */
export function instanceOfCreateClientStorageJson(value: object): value is CreateClientStorageJson {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('provider' in value) || value['provider'] === undefined) return false;
    if (!('config' in value) || value['config'] === undefined) return false;
    return true;
}

export function CreateClientStorageJsonFromJSON(json: any): CreateClientStorageJson {
    return CreateClientStorageJsonFromJSONTyped(json, false);
}

export function CreateClientStorageJsonFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateClientStorageJson {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'provider': json['provider'],
        'config': json['config'],
    };
}

export function CreateClientStorageJsonToJSON(json: any): CreateClientStorageJson {
    return CreateClientStorageJsonToJSONTyped(json, false);
}

export function CreateClientStorageJsonToJSONTyped(value?: CreateClientStorageJson | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'provider': value['provider'],
        'config': value['config'],
    };
}

