/* tslint:disable */
/* eslint-disable */
/**
 * BackedUp API
 * Microservices-based backup and vault management platform with encrypted backups and distributed storage
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { BackupResponse } from './BackupResponse';
import {
    BackupResponseFromJSON,
    BackupResponseFromJSONTyped,
    BackupResponseToJSON,
    BackupResponseToJSONTyped,
} from './BackupResponse';

/**
 * 
 * @export
 * @interface BackupListResponse
 */
export interface BackupListResponse {
    /**
     * 
     * @type {number}
     * @memberof BackupListResponse
     */
    page?: number;
    /**
     * 
     * @type {number}
     * @memberof BackupListResponse
     */
    limit?: number;
    /**
     * 
     * @type {number}
     * @memberof BackupListResponse
     */
    total?: number;
    /**
     * 
     * @type {Array<BackupResponse>}
     * @memberof BackupListResponse
     */
    items?: Array<BackupResponse>;
}

/**
 * Check if a given object implements the BackupListResponse interface.
 */
export function instanceOfBackupListResponse(value: object): value is BackupListResponse {
    return true;
}

export function BackupListResponseFromJSON(json: any): BackupListResponse {
    return BackupListResponseFromJSONTyped(json, false);
}

export function BackupListResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): BackupListResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'page': json['page'] == null ? undefined : json['page'],
        'limit': json['limit'] == null ? undefined : json['limit'],
        'total': json['total'] == null ? undefined : json['total'],
        'items': json['items'] == null ? undefined : ((json['items'] as Array<any>).map(BackupResponseFromJSON)),
    };
}

export function BackupListResponseToJSON(json: any): BackupListResponse {
    return BackupListResponseToJSONTyped(json, false);
}

export function BackupListResponseToJSONTyped(value?: BackupListResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'page': value['page'],
        'limit': value['limit'],
        'total': value['total'],
        'items': value['items'] == null ? undefined : ((value['items'] as Array<any>).map(BackupResponseToJSON)),
    };
}

