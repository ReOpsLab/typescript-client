/* tslint:disable */
/* eslint-disable */
/**
 * BackedUp API
 * Microservices-based backup and vault management platform with encrypted backups and distributed storage
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UpdateClientSignalJson
 */
export interface UpdateClientSignalJson {
    /**
     * 
     * @type {string}
     * @memberof UpdateClientSignalJson
     */
    provider?: UpdateClientSignalJsonProviderEnum;
    /**
     * 
     * @type {object}
     * @memberof UpdateClientSignalJson
     */
    config?: object;
}


/**
 * @export
 */
export const UpdateClientSignalJsonProviderEnum = {
    Email: 'email',
    Webhook: 'webhook'
} as const;
export type UpdateClientSignalJsonProviderEnum = typeof UpdateClientSignalJsonProviderEnum[keyof typeof UpdateClientSignalJsonProviderEnum];


/**
 * Check if a given object implements the UpdateClientSignalJson interface.
 */
export function instanceOfUpdateClientSignalJson(value: object): value is UpdateClientSignalJson {
    return true;
}

export function UpdateClientSignalJsonFromJSON(json: any): UpdateClientSignalJson {
    return UpdateClientSignalJsonFromJSONTyped(json, false);
}

export function UpdateClientSignalJsonFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateClientSignalJson {
    if (json == null) {
        return json;
    }
    return {
        
        'provider': json['provider'] == null ? undefined : json['provider'],
        'config': json['config'] == null ? undefined : json['config'],
    };
}

export function UpdateClientSignalJsonToJSON(json: any): UpdateClientSignalJson {
    return UpdateClientSignalJsonToJSONTyped(json, false);
}

export function UpdateClientSignalJsonToJSONTyped(value?: UpdateClientSignalJson | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'provider': value['provider'],
        'config': value['config'],
    };
}

