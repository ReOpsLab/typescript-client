/* tslint:disable */
/* eslint-disable */
/**
 * BackedUp API
 * Microservices-based backup and vault management platform with encrypted backups and distributed storage
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ConfirmBackupUploadedResponse
 */
export interface ConfirmBackupUploadedResponse {
    /**
     * 
     * @type {string}
     * @memberof ConfirmBackupUploadedResponse
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof ConfirmBackupUploadedResponse
     */
    workspace_id?: string;
    /**
     * 
     * @type {string}
     * @memberof ConfirmBackupUploadedResponse
     */
    project_id?: string;
    /**
     * 
     * @type {string}
     * @memberof ConfirmBackupUploadedResponse
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof ConfirmBackupUploadedResponse
     */
    description?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof ConfirmBackupUploadedResponse
     */
    tags?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof ConfirmBackupUploadedResponse
     */
    checksum?: string;
    /**
     * 
     * @type {number}
     * @memberof ConfirmBackupUploadedResponse
     */
    size?: number;
    /**
     * 
     * @type {string}
     * @memberof ConfirmBackupUploadedResponse
     */
    content_type?: string;
    /**
     * 
     * @type {string}
     * @memberof ConfirmBackupUploadedResponse
     */
    status?: ConfirmBackupUploadedResponseStatusEnum;
    /**
     * 
     * @type {Date}
     * @memberof ConfirmBackupUploadedResponse
     */
    created_at?: Date;
    /**
     * 
     * @type {Date}
     * @memberof ConfirmBackupUploadedResponse
     */
    updated_at?: Date;
    /**
     * 
     * @type {boolean}
     * @memberof ConfirmBackupUploadedResponse
     */
    confirmed?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ConfirmBackupUploadedResponse
     */
    verified?: boolean;
    /**
     * 
     * @type {string}
     * @memberof ConfirmBackupUploadedResponse
     */
    workflow_id?: string;
}


/**
 * @export
 */
export const ConfirmBackupUploadedResponseStatusEnum = {
    Pending: 'pending',
    Uploading: 'uploading',
    Processing: 'processing',
    Completed: 'completed',
    CompletedWithErrors: 'completed_with_errors',
    Failed: 'failed'
} as const;
export type ConfirmBackupUploadedResponseStatusEnum = typeof ConfirmBackupUploadedResponseStatusEnum[keyof typeof ConfirmBackupUploadedResponseStatusEnum];


/**
 * Check if a given object implements the ConfirmBackupUploadedResponse interface.
 */
export function instanceOfConfirmBackupUploadedResponse(value: object): value is ConfirmBackupUploadedResponse {
    return true;
}

export function ConfirmBackupUploadedResponseFromJSON(json: any): ConfirmBackupUploadedResponse {
    return ConfirmBackupUploadedResponseFromJSONTyped(json, false);
}

export function ConfirmBackupUploadedResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConfirmBackupUploadedResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'workspace_id': json['workspace_id'] == null ? undefined : json['workspace_id'],
        'project_id': json['project_id'] == null ? undefined : json['project_id'],
        'name': json['name'] == null ? undefined : json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'tags': json['tags'] == null ? undefined : json['tags'],
        'checksum': json['checksum'] == null ? undefined : json['checksum'],
        'size': json['size'] == null ? undefined : json['size'],
        'content_type': json['content_type'] == null ? undefined : json['content_type'],
        'status': json['status'] == null ? undefined : json['status'],
        'created_at': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'updated_at': json['updated_at'] == null ? undefined : (new Date(json['updated_at'])),
        'confirmed': json['confirmed'] == null ? undefined : json['confirmed'],
        'verified': json['verified'] == null ? undefined : json['verified'],
        'workflow_id': json['workflow_id'] == null ? undefined : json['workflow_id'],
    };
}

export function ConfirmBackupUploadedResponseToJSON(json: any): ConfirmBackupUploadedResponse {
    return ConfirmBackupUploadedResponseToJSONTyped(json, false);
}

export function ConfirmBackupUploadedResponseToJSONTyped(value?: ConfirmBackupUploadedResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'workspace_id': value['workspace_id'],
        'project_id': value['project_id'],
        'name': value['name'],
        'description': value['description'],
        'tags': value['tags'],
        'checksum': value['checksum'],
        'size': value['size'],
        'content_type': value['content_type'],
        'status': value['status'],
        'created_at': value['created_at'] == null ? undefined : ((value['created_at']).toISOString()),
        'updated_at': value['updated_at'] == null ? undefined : ((value['updated_at']).toISOString()),
        'confirmed': value['confirmed'],
        'verified': value['verified'],
        'workflow_id': value['workflow_id'],
    };
}

