/* tslint:disable */
/* eslint-disable */
/**
 * BackedUp API
 * Microservices-based backup and vault management platform with encrypted backups and distributed storage
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ProjectResponse
 */
export interface ProjectResponse {
    /**
     * 
     * @type {string}
     * @memberof ProjectResponse
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof ProjectResponse
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof ProjectResponse
     */
    workspace_id?: string;
    /**
     * 
     * @type {Date}
     * @memberof ProjectResponse
     */
    created_at?: Date;
    /**
     * 
     * @type {Date}
     * @memberof ProjectResponse
     */
    updated_at?: Date;
    /**
     * Duration in nanoseconds
     * @type {number}
     * @memberof ProjectResponse
     */
    retention_lock_period?: number;
    /**
     * 
     * @type {number}
     * @memberof ProjectResponse
     */
    max_backup_count?: number;
    /**
     * Duration in nanoseconds
     * @type {number}
     * @memberof ProjectResponse
     */
    max_backup_age?: number;
    /**
     * 
     * @type {number}
     * @memberof ProjectResponse
     */
    compression_level?: number;
}

/**
 * Check if a given object implements the ProjectResponse interface.
 */
export function instanceOfProjectResponse(value: object): value is ProjectResponse {
    return true;
}

export function ProjectResponseFromJSON(json: any): ProjectResponse {
    return ProjectResponseFromJSONTyped(json, false);
}

export function ProjectResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProjectResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'workspace_id': json['workspace_id'] == null ? undefined : json['workspace_id'],
        'created_at': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'updated_at': json['updated_at'] == null ? undefined : (new Date(json['updated_at'])),
        'retention_lock_period': json['retention_lock_period'] == null ? undefined : json['retention_lock_period'],
        'max_backup_count': json['max_backup_count'] == null ? undefined : json['max_backup_count'],
        'max_backup_age': json['max_backup_age'] == null ? undefined : json['max_backup_age'],
        'compression_level': json['compression_level'] == null ? undefined : json['compression_level'],
    };
}

export function ProjectResponseToJSON(json: any): ProjectResponse {
    return ProjectResponseToJSONTyped(json, false);
}

export function ProjectResponseToJSONTyped(value?: ProjectResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'workspace_id': value['workspace_id'],
        'created_at': value['created_at'] == null ? undefined : ((value['created_at']).toISOString()),
        'updated_at': value['updated_at'] == null ? undefined : ((value['updated_at']).toISOString()),
        'retention_lock_period': value['retention_lock_period'],
        'max_backup_count': value['max_backup_count'],
        'max_backup_age': value['max_backup_age'],
        'compression_level': value['compression_level'],
    };
}

