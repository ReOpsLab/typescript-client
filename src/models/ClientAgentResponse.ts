/* tslint:disable */
/* eslint-disable */
/**
 * BackedUp API
 * Microservices-based backup and vault management platform with encrypted backups and distributed storage
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ClientAgentResponse
 */
export interface ClientAgentResponse {
    /**
     * 
     * @type {string}
     * @memberof ClientAgentResponse
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof ClientAgentResponse
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof ClientAgentResponse
     */
    workspace_id?: string;
    /**
     * 
     * @type {string}
     * @memberof ClientAgentResponse
     */
    created_at?: string;
    /**
     * 
     * @type {string}
     * @memberof ClientAgentResponse
     */
    updated_at?: string;
    /**
     * 
     * @type {string}
     * @memberof ClientAgentResponse
     */
    client_id?: string;
    /**
     * 
     * @type {string}
     * @memberof ClientAgentResponse
     */
    client_secret?: string;
    /**
     * 
     * @type {string}
     * @memberof ClientAgentResponse
     */
    scope?: string;
    /**
     * 
     * @type {string}
     * @memberof ClientAgentResponse
     */
    public_url?: string;
}

/**
 * Check if a given object implements the ClientAgentResponse interface.
 */
export function instanceOfClientAgentResponse(value: object): value is ClientAgentResponse {
    return true;
}

export function ClientAgentResponseFromJSON(json: any): ClientAgentResponse {
    return ClientAgentResponseFromJSONTyped(json, false);
}

export function ClientAgentResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ClientAgentResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'workspace_id': json['workspace_id'] == null ? undefined : json['workspace_id'],
        'created_at': json['created_at'] == null ? undefined : json['created_at'],
        'updated_at': json['updated_at'] == null ? undefined : json['updated_at'],
        'client_id': json['client_id'] == null ? undefined : json['client_id'],
        'client_secret': json['client_secret'] == null ? undefined : json['client_secret'],
        'scope': json['scope'] == null ? undefined : json['scope'],
        'public_url': json['public_url'] == null ? undefined : json['public_url'],
    };
}

export function ClientAgentResponseToJSON(json: any): ClientAgentResponse {
    return ClientAgentResponseToJSONTyped(json, false);
}

export function ClientAgentResponseToJSONTyped(value?: ClientAgentResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'workspace_id': value['workspace_id'],
        'created_at': value['created_at'],
        'updated_at': value['updated_at'],
        'client_id': value['client_id'],
        'client_secret': value['client_secret'],
        'scope': value['scope'],
        'public_url': value['public_url'],
    };
}

