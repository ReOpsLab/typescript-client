/* tslint:disable */
/* eslint-disable */
/**
 * BackedUp API
 * Microservices-based backup and vault management platform with encrypted backups and distributed storage
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { BackupJobProvider } from './BackupJobProvider';
import {
    BackupJobProviderFromJSON,
    BackupJobProviderFromJSONTyped,
    BackupJobProviderToJSON,
    BackupJobProviderToJSONTyped,
} from './BackupJobProvider';
import type { BackupJobType } from './BackupJobType';
import {
    BackupJobTypeFromJSON,
    BackupJobTypeFromJSONTyped,
    BackupJobTypeToJSON,
    BackupJobTypeToJSONTyped,
} from './BackupJobType';

/**
 * 
 * @export
 * @interface AutoBackupResponse
 */
export interface AutoBackupResponse {
    /**
     * 
     * @type {string}
     * @memberof AutoBackupResponse
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof AutoBackupResponse
     */
    vault_id?: string;
    /**
     * 
     * @type {string}
     * @memberof AutoBackupResponse
     */
    workspace_id?: string;
    /**
     * 
     * @type {BackupJobType}
     * @memberof AutoBackupResponse
     */
    type?: BackupJobType;
    /**
     * 
     * @type {BackupJobProvider}
     * @memberof AutoBackupResponse
     */
    provider?: BackupJobProvider;
    /**
     * Only present when type is 'agent'
     * @type {string}
     * @memberof AutoBackupResponse
     */
    agent_id?: string;
    /**
     * Only present when type is 'worker'
     * @type {string}
     * @memberof AutoBackupResponse
     */
    zone?: string;
    /**
     * Cron expression
     * @type {string}
     * @memberof AutoBackupResponse
     */
    schedule?: string;
    /**
     * Temporal workflow schedule ID
     * @type {string}
     * @memberof AutoBackupResponse
     */
    temporal_schedule_id?: string;
}



/**
 * Check if a given object implements the AutoBackupResponse interface.
 */
export function instanceOfAutoBackupResponse(value: object): value is AutoBackupResponse {
    return true;
}

export function AutoBackupResponseFromJSON(json: any): AutoBackupResponse {
    return AutoBackupResponseFromJSONTyped(json, false);
}

export function AutoBackupResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): AutoBackupResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'vault_id': json['vault_id'] == null ? undefined : json['vault_id'],
        'workspace_id': json['workspace_id'] == null ? undefined : json['workspace_id'],
        'type': json['type'] == null ? undefined : BackupJobTypeFromJSON(json['type']),
        'provider': json['provider'] == null ? undefined : BackupJobProviderFromJSON(json['provider']),
        'agent_id': json['agent_id'] == null ? undefined : json['agent_id'],
        'zone': json['zone'] == null ? undefined : json['zone'],
        'schedule': json['schedule'] == null ? undefined : json['schedule'],
        'temporal_schedule_id': json['temporal_schedule_id'] == null ? undefined : json['temporal_schedule_id'],
    };
}

export function AutoBackupResponseToJSON(json: any): AutoBackupResponse {
    return AutoBackupResponseToJSONTyped(json, false);
}

export function AutoBackupResponseToJSONTyped(value?: AutoBackupResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'vault_id': value['vault_id'],
        'workspace_id': value['workspace_id'],
        'type': BackupJobTypeToJSON(value['type']),
        'provider': BackupJobProviderToJSON(value['provider']),
        'agent_id': value['agent_id'],
        'zone': value['zone'],
        'schedule': value['schedule'],
        'temporal_schedule_id': value['temporal_schedule_id'],
    };
}

