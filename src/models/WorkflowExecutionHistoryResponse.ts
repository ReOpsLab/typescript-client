/* tslint:disable */
/* eslint-disable */
/**
 * BackedUp API
 * Microservices-based backup and vault management platform with encrypted backups and distributed storage
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { WorkflowHistoryEvent } from './WorkflowHistoryEvent';
import {
    WorkflowHistoryEventFromJSON,
    WorkflowHistoryEventFromJSONTyped,
    WorkflowHistoryEventToJSON,
    WorkflowHistoryEventToJSONTyped,
} from './WorkflowHistoryEvent';

/**
 * 
 * @export
 * @interface WorkflowExecutionHistoryResponse
 */
export interface WorkflowExecutionHistoryResponse {
    /**
     * 
     * @type {Array<WorkflowHistoryEvent>}
     * @memberof WorkflowExecutionHistoryResponse
     */
    events?: Array<WorkflowHistoryEvent>;
}

/**
 * Check if a given object implements the WorkflowExecutionHistoryResponse interface.
 */
export function instanceOfWorkflowExecutionHistoryResponse(value: object): value is WorkflowExecutionHistoryResponse {
    return true;
}

export function WorkflowExecutionHistoryResponseFromJSON(json: any): WorkflowExecutionHistoryResponse {
    return WorkflowExecutionHistoryResponseFromJSONTyped(json, false);
}

export function WorkflowExecutionHistoryResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkflowExecutionHistoryResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'events': json['events'] == null ? undefined : ((json['events'] as Array<any>).map(WorkflowHistoryEventFromJSON)),
    };
}

export function WorkflowExecutionHistoryResponseToJSON(json: any): WorkflowExecutionHistoryResponse {
    return WorkflowExecutionHistoryResponseToJSONTyped(json, false);
}

export function WorkflowExecutionHistoryResponseToJSONTyped(value?: WorkflowExecutionHistoryResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'events': value['events'] == null ? undefined : ((value['events'] as Array<any>).map(WorkflowHistoryEventToJSON)),
    };
}

