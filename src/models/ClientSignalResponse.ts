/* tslint:disable */
/* eslint-disable */
/**
 * BackedUp API
 * Microservices-based backup and vault management platform with encrypted backups and distributed storage
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ClientSignalResponse
 */
export interface ClientSignalResponse {
    /**
     * 
     * @type {string}
     * @memberof ClientSignalResponse
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof ClientSignalResponse
     */
    workspace_id?: string;
    /**
     * 
     * @type {Date}
     * @memberof ClientSignalResponse
     */
    created_at?: Date;
    /**
     * 
     * @type {Date}
     * @memberof ClientSignalResponse
     */
    updated_at?: Date;
    /**
     * 
     * @type {string}
     * @memberof ClientSignalResponse
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof ClientSignalResponse
     */
    provider?: ClientSignalResponseProviderEnum;
}


/**
 * @export
 */
export const ClientSignalResponseProviderEnum = {
    Email: 'email',
    Webhook: 'webhook'
} as const;
export type ClientSignalResponseProviderEnum = typeof ClientSignalResponseProviderEnum[keyof typeof ClientSignalResponseProviderEnum];


/**
 * Check if a given object implements the ClientSignalResponse interface.
 */
export function instanceOfClientSignalResponse(value: object): value is ClientSignalResponse {
    return true;
}

export function ClientSignalResponseFromJSON(json: any): ClientSignalResponse {
    return ClientSignalResponseFromJSONTyped(json, false);
}

export function ClientSignalResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ClientSignalResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'workspace_id': json['workspace_id'] == null ? undefined : json['workspace_id'],
        'created_at': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'updated_at': json['updated_at'] == null ? undefined : (new Date(json['updated_at'])),
        'name': json['name'] == null ? undefined : json['name'],
        'provider': json['provider'] == null ? undefined : json['provider'],
    };
}

export function ClientSignalResponseToJSON(json: any): ClientSignalResponse {
    return ClientSignalResponseToJSONTyped(json, false);
}

export function ClientSignalResponseToJSONTyped(value?: ClientSignalResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'workspace_id': value['workspace_id'],
        'created_at': value['created_at'] == null ? undefined : ((value['created_at']).toISOString()),
        'updated_at': value['updated_at'] == null ? undefined : ((value['updated_at']).toISOString()),
        'name': value['name'],
        'provider': value['provider'],
    };
}

