/* tslint:disable */
/* eslint-disable */
/**
 * BackedUp API
 * Microservices-based backup and vault management platform with encrypted backups and distributed storage
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateClientSignalJson
 */
export interface CreateClientSignalJson {
    /**
     * 
     * @type {string}
     * @memberof CreateClientSignalJson
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof CreateClientSignalJson
     */
    provider: CreateClientSignalJsonProviderEnum;
    /**
     * Provider-specific configuration (email or webhook)
     * @type {object}
     * @memberof CreateClientSignalJson
     */
    config: object;
}


/**
 * @export
 */
export const CreateClientSignalJsonProviderEnum = {
    Email: 'email',
    Webhook: 'webhook'
} as const;
export type CreateClientSignalJsonProviderEnum = typeof CreateClientSignalJsonProviderEnum[keyof typeof CreateClientSignalJsonProviderEnum];


/**
 * Check if a given object implements the CreateClientSignalJson interface.
 */
export function instanceOfCreateClientSignalJson(value: object): value is CreateClientSignalJson {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('provider' in value) || value['provider'] === undefined) return false;
    if (!('config' in value) || value['config'] === undefined) return false;
    return true;
}

export function CreateClientSignalJsonFromJSON(json: any): CreateClientSignalJson {
    return CreateClientSignalJsonFromJSONTyped(json, false);
}

export function CreateClientSignalJsonFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateClientSignalJson {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'provider': json['provider'],
        'config': json['config'],
    };
}

export function CreateClientSignalJsonToJSON(json: any): CreateClientSignalJson {
    return CreateClientSignalJsonToJSONTyped(json, false);
}

export function CreateClientSignalJsonToJSONTyped(value?: CreateClientSignalJson | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'provider': value['provider'],
        'config': value['config'],
    };
}

