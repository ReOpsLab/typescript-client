/* tslint:disable */
/* eslint-disable */
/**
 * BackedUp API
 * Microservices-based backup and vault management platform with encrypted backups and distributed storage
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { BackupJobProvider } from './BackupJobProvider';
import {
    BackupJobProviderFromJSON,
    BackupJobProviderFromJSONTyped,
    BackupJobProviderToJSON,
    BackupJobProviderToJSONTyped,
} from './BackupJobProvider';
import type { BackupJobType } from './BackupJobType';
import {
    BackupJobTypeFromJSON,
    BackupJobTypeFromJSONTyped,
    BackupJobTypeToJSON,
    BackupJobTypeToJSONTyped,
} from './BackupJobType';

/**
 * 
 * @export
 * @interface CreateAutoBackupJson
 */
export interface CreateAutoBackupJson {
    /**
     * 
     * @type {BackupJobType}
     * @memberof CreateAutoBackupJson
     */
    type: BackupJobType;
    /**
     * 
     * @type {BackupJobProvider}
     * @memberof CreateAutoBackupJson
     */
    provider: BackupJobProvider;
    /**
     * Provider-specific backup job configuration. Required for worker jobs, optional for agent jobs (config provided in agent YAML)
     * @type {object}
     * @memberof CreateAutoBackupJson
     */
    config?: object;
    /**
     * Required when type is 'agent'
     * @type {string}
     * @memberof CreateAutoBackupJson
     */
    agent_id?: string;
    /**
     * Required when type is 'worker' (e.g., us-east-1, us-west-2)
     * @type {string}
     * @memberof CreateAutoBackupJson
     */
    zone?: string;
    /**
     * Cron expression for scheduled execution (e.g., "0 2 * * *" for daily at 2 AM)
     * @type {string}
     * @memberof CreateAutoBackupJson
     */
    schedule: string;
}



/**
 * Check if a given object implements the CreateAutoBackupJson interface.
 */
export function instanceOfCreateAutoBackupJson(value: object): value is CreateAutoBackupJson {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('provider' in value) || value['provider'] === undefined) return false;
    if (!('schedule' in value) || value['schedule'] === undefined) return false;
    return true;
}

export function CreateAutoBackupJsonFromJSON(json: any): CreateAutoBackupJson {
    return CreateAutoBackupJsonFromJSONTyped(json, false);
}

export function CreateAutoBackupJsonFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateAutoBackupJson {
    if (json == null) {
        return json;
    }
    return {
        
        'type': BackupJobTypeFromJSON(json['type']),
        'provider': BackupJobProviderFromJSON(json['provider']),
        'config': json['config'] == null ? undefined : json['config'],
        'agent_id': json['agent_id'] == null ? undefined : json['agent_id'],
        'zone': json['zone'] == null ? undefined : json['zone'],
        'schedule': json['schedule'],
    };
}

export function CreateAutoBackupJsonToJSON(json: any): CreateAutoBackupJson {
    return CreateAutoBackupJsonToJSONTyped(json, false);
}

export function CreateAutoBackupJsonToJSONTyped(value?: CreateAutoBackupJson | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': BackupJobTypeToJSON(value['type']),
        'provider': BackupJobProviderToJSON(value['provider']),
        'config': value['config'],
        'agent_id': value['agent_id'],
        'zone': value['zone'],
        'schedule': value['schedule'],
    };
}

