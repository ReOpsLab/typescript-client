/* tslint:disable */
/* eslint-disable */
/**
 * BackedUp API
 * Microservices-based backup and vault management platform with encrypted backups and distributed storage
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateClientEncryptionKey
 */
export interface CreateClientEncryptionKey {
    /**
     * 
     * @type {string}
     * @memberof CreateClientEncryptionKey
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof CreateClientEncryptionKey
     */
    key: string;
    /**
     * 
     * @type {string}
     * @memberof CreateClientEncryptionKey
     */
    finger_print: string;
}

/**
 * Check if a given object implements the CreateClientEncryptionKey interface.
 */
export function instanceOfCreateClientEncryptionKey(value: object): value is CreateClientEncryptionKey {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('key' in value) || value['key'] === undefined) return false;
    if (!('finger_print' in value) || value['finger_print'] === undefined) return false;
    return true;
}

export function CreateClientEncryptionKeyFromJSON(json: any): CreateClientEncryptionKey {
    return CreateClientEncryptionKeyFromJSONTyped(json, false);
}

export function CreateClientEncryptionKeyFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateClientEncryptionKey {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'key': json['key'],
        'finger_print': json['finger_print'],
    };
}

export function CreateClientEncryptionKeyToJSON(json: any): CreateClientEncryptionKey {
    return CreateClientEncryptionKeyToJSONTyped(json, false);
}

export function CreateClientEncryptionKeyToJSONTyped(value?: CreateClientEncryptionKey | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'key': value['key'],
        'finger_print': value['finger_print'],
    };
}

